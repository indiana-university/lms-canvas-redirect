spring:
  application:
    name: redirect
  session:
    store-type: none
  config.import: optional:${app.fullFilePath}/${app.overridesFileName}, optional:${app.fullFilePath}/security.properties, optional:classpath:git.properties
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        temp:
          use_jdbc_metadata_defaults: false
      jadira:
        usertype:
          autoRegisterUserTypes: true
  datasource:
    driverClassName: ${lms.db.driverClass}
    url: ${lms.db.url}
    username: ${lms.db.user}
    password: ${lms.db.password}
    type: org.springframework.jdbc.datasource.DriverManagerDataSource
  cloud.vault.enabled: false

#  output:
#    ansi:
#      enabled: ALWAYS
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${oauth.tokenprovider.url}/.well-known/jwks.json
redirect:
  version: @app.version@
  env: ${app.env}

server:
  error:
    whitelabel:
      enabled: false
  servlet:
    session:
      timeout: 30m

app:
  env: dev
  fullFilePath: file:/usr/src/app/config
  overridesFileName: overrides.properties

management:
  endpoint.info.enabled: true
  endpoints.web.exposure.include: health,info
  health.redis.enabled: false

---

spring:
  config:
    activate.on-profile: vault
    import: vault://
  #  cloud.bootstrap.enabled: true
  cloud.vault:
    enabled: true
    config:
      lifecycle.lease-endpoints: sysleases
    generic:
      enabled: false
    kv:
      enabled: true
      backend: ua-vpit/enterprise-systems/lms/kv
      application-name: redirect
